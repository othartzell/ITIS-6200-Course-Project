# Owen Hartzell ohartzel@charlotte.edu

# ITIS 6200 Course Project: Implementing AES-CBC Mode encryption from scratch

'''
REFERENCES
    - Basic implementation of AES encryption with padding in python: https://www.askpython.com/python/examples/implementing-aes-with-padding
    - PKCS7 padding in python: https://stackoverflow.com/questions/43199123/encrypting-with-aes-256-and-pkcs7-padding
'''

# Imports

# === Constants ===
# 16 byte blocks for AES
block_size = 16
# 32 byte key for encryption
key_size = 32
# 16 bytes of salt to add to user inputted password
salt_size = 16

# === AES-CBC Mode helper functions ===
'''
Function to pad data
    - Input: data from user inputted file to encrypt
    - Calculates how many bytes of padding are needed using modulo operator
    - Returns the padded data
'''
def pad(data):
    padding_length = block_size - (len(data) % block_size)
    padding = bytes([padding_length] * padding_length)
    return data + padding

'''
To do: Implement a function to unpad data
    - Takes in the padded data generated by the pad data function
    - Removes padding and returns the unpadded data
'''

'''
To do: Implement a function to generate a key and iv for encryption
    - Takes in the password entered by the user and salt added to the password
    - Derives a 32 byte key and 16 byte IV from the password and salt
    - Returns the generated key and IV to be used in CBC
'''

'''
To do: Implement a function to xor two byte strings
    - Takes in two byte strings
    - Performs the XOR operation using these byte strings to add entropy for CBC
    - Returns the resulting byte string after XORing
'''

'''
To do: Implement a function to encrypt a block of data
    - Takes in a block of plaintext and the key generated for the encryption
    - Performs encryption on the block
    - Returns the ciphertext of the block
'''

'''
To do: Implement a function to decrypt a block of data
    - Takes in a block of ciphertext and the key used for encryption
    - Performs decryption on the block
    - Returns the plaintext of the block
'''

'''
To do: Implement a function to encrypt the full file inputted by the user
    - Takes in the plaintext of the file specified by the user, the key, and IV
    - Pads the plaintext file and splits it into blocks
    - Loops through the blocks and encrypts each block
    - Returns the ciphertext
'''

'''
To do: Implement a function to decrypt the full ciphertext generated by the encrypt function
    - Takes in the ciphertext generated, the key, and the IV
    - Splits the ciphertext into blocks
    - Loops through the blocks to decrypt each block
    - Unpads plaintext after decryption
    - Returns the plaintext
'''

# === Simple GUI to demonstrate encrypting and decrypting files ===
'''
To do: Make a simple GUI
    - User can select a file locally on their machine to encrypt or decrypt
    - User can input a password for encryption or decryption
    - Provides feedback to the user for success/failure of encryption/decryption
'''